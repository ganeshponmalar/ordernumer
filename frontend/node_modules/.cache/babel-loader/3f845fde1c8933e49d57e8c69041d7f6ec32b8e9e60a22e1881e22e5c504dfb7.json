{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// import axios from 'axios';\n\n// import { useEffect, useState } from 'react';\n\n// export default function DataDisplay() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n\n//         fetchData()\n\n//     }, [])\n\n//     const fetchData = async () => {\n\n//         try {\n\n//             const response = await axios.get('http://localhost:9000/aliens/sec');\n\n//             console.log(response)\n\n//             setData(response.data)\n\n//         } catch (error) {\n\n//             console.log('Error fetching data:', error)\n\n//         }\n\n//     };\n\n//     return (\n\n//         <div>\n\n//             <h2>Product Data:\n\n//             </h2>\n\n//             {data.map((item) => (\n\n//                 <div key={item._id}>\n\n//                     <pre>Query: {item.query.query_string.query}</pre>\n\n//                     <p>ID: {item._id}</p>\n\n//                 </div>\n\n//             ))}\n//         </div>\n//     );\n// };\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormatData() {\n  _s();\n  const [orderNumber, setOrderNumber] = useState('');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFetchData = () => {\n    setLoading(true);\n    axios.get(`http://localhost:9000/aliens/${orderNumber}`).then(response => {\n      if (response.status === 200) {\n        setData(response.data);\n      } else {\n        alert('An error occurred');\n      }\n    }).catch(error => {\n      console.log('Error', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"orderNumber\",\n      children: \"Order Number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: orderNumber,\n      onChange: e => setOrderNumber(e.target.value),\n      placeholder: \"Enter order number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleFetchData,\n      children: \"Order-Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(data).map(_ref => {\n        let [key, value] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(FormatData, \"uXfNpRHziIGmSCZDF57chJmdOIA=\");\n_c = FormatData;\nvar _c;\n$RefreshReg$(_c, \"FormatData\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FormatData","_s","orderNumber","setOrderNumber","data","setData","loading","setLoading","handleFetchData","get","then","response","status","alert","catch","error","console","log","finally","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Object","entries","map","_ref","key","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js"],"sourcesContent":["// import React from \"react\";\n\n// import axios from 'axios';\n\n// import { useEffect, useState } from 'react';\n\n// export default function DataDisplay() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n\n//         fetchData()\n\n//     }, [])\n\n\n//     const fetchData = async () => {\n        \n//         try {\n\n//             const response = await axios.get('http://localhost:9000/aliens/sec');\n\n            \n//             console.log(response)\n\n//             setData(response.data)\n\n\n//         } catch (error) {\n\n//             console.log('Error fetching data:', error)\n\n//         }\n\n//     };\n\n//     return (\n\n//         <div>\n\n//             <h2>Product Data:\n\n//             </h2>\n\n\n//             {data.map((item) => (\n\n//                 <div key={item._id}>\n\n//                     <pre>Query: {item.query.query_string.query}</pre>\n\n//                     <p>ID: {item._id}</p>\n\n\n//                 </div>\n\n//             ))}\n//         </div>\n//     );\n// };\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function FormatData() {\n  const [orderNumber, setOrderNumber] = useState('');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFetchData = () => {\n    setLoading(true);\n    axios\n      .get(`http://localhost:9000/aliens/${orderNumber}`)\n      .then(response => {\n        if (response.status === 200) {\n          setData(response.data);\n        } else {\n          alert('An error occurred');\n        }\n      })\n      .catch(error => {\n        console.log('Error', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className='container'>\n      <label className='label' htmlFor='orderNumber'>\n        Order Number:\n      </label>\n      <input\n        type='text'\n        value={orderNumber}\n        onChange={e => setOrderNumber(e.target.value)}\n        placeholder='Enter order number'\n      />\n      <br />\n      <button className='btn' onClick={handleFetchData}>\n        Order-Number\n      </button>\n      {loading && <p>Loading...</p>}\n      {data && (\n        <div>\n          {Object.entries(data).map(([key, value]) => (\n            <div key={key}>\n              <h3>{key}</h3>\n              <p>{value}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n    \n\n   \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}