{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React from \"react\";\n\n// import axios from 'axios';\n\n// import { useEffect, useState } from 'react';\n\n// export default function DataDisplay() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n\n//         fetchData()\n\n//     }, [])\n\n//     const fetchData = async () => {\n\n//         try {\n\n//             const response = await axios.get('http://localhost:9000/aliens/sec');\n\n//             console.log(response)\n\n//             setData(response.data)\n\n//         } catch (error) {\n\n//             console.log('Error fetching data:', error)\n\n//         }\n\n//     };\n\n//     return (\n\n//         <div>\n\n//             <h2>Product Data:\n\n//             </h2>\n\n//             {data.map((item) => (\n\n//                 <div key={item._id}>\n\n//                     <pre>Query: {item.query.query_string.query}</pre>\n\n//                     <p>ID: {item._id}</p>\n\n//                 </div>\n\n//             ))}\n//         </div>\n//     );\n// };\n\n//  import React, { useState } from 'react';\n\n//  import axios from 'axios';\n\n//  export default function FormatData() {\n\n//   const [orderNumber, setOrderNumber] = useState('');\n\n//   const [data, setData] = useState(null);\n\n//   const [loading, setLoading] = useState(false);\n\n//   const handleFetchData = () => {\n\n//     setLoading(true);\n\n//     axios\n//       .get(`http://localhost:9000/aliens/${orderNumber}`)\n\n//       .then(response => {\n\n//         if (response.status === 200) {\n\n//           setData(response.data);\n\n//         } else {\n\n//           alert('An error occurred');\n//         }\n//       })\n\n//       .catch(error => {\n\n//         console.log('Error', error);\n\n//       })\n\n//       .finally(() => {\n\n//         setLoading(false);\n\n//       });\n//   };\n\n//   return (\n//     <div className='container'>\n\n//       <label className='label' htmlFor='orderNumber'>\n\n//         Order Number:\n\n//       </label>\n\n//       <input\n\n//         type='text'\n\n//         value={orderNumber}\n\n//         onChange={e => setOrderNumber(e.target.value)}\n\n//         placeholder='Enter order number'\n\n//       />\n\n//       <br />\n\n//       <button className='btn' onClick={handleFetchData}>\n\n//         Order-Number\n\n//       </button>\n\n//       {loading && <p>Loading...</p>}\n\n//       {data && (\n\n//         <pre className='json-format'>{JSON.stringify(data, null, 2)}</pre>\n\n//       )}\n//     </div>\n//   );\n// }\n\nexport default function FormatData() {\n  _s();\n  const [orderNumber, setOrderNumber] = useState('');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFetchData = () => {\n    setLoading(true);\n    axios.get('http://localhost:9000/aliens').then(response => {\n      if (response.status === 200) {\n        setData(response.data);\n      } else {\n        alert('An error occurred');\n      }\n    }).catch(error => {\n      console.log('Error', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  const filteredData = data.filter(item => {\n    return item.query.query_string.order_number === orderNumber;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"ON\",\n      children: \"ON:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: orderNumber,\n      onChange: e => setOrderNumber(e.target.value),\n      placeholder: \"Enter order number\",\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleFetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }, this), filteredData.length > 0 ? filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"json-format\",\n      children: JSON.stringify(item, null, 2)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 7\n  }, this);\n}\n_s(FormatData, \"LVTzqB4vB2c0L97lzhttEouOm1s=\");\n_c = FormatData;\nvar _c;\n$RefreshReg$(_c, \"FormatData\");","map":{"version":3,"names":["FormatData","_s","orderNumber","setOrderNumber","useState","data","setData","loading","setLoading","handleFetchData","axios","get","then","response","status","alert","catch","error","console","log","finally","filteredData","filter","item","query","query_string","order_number","_jsxDEV","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","length","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js"],"sourcesContent":["// import React from \"react\";\n\n// import axios from 'axios';\n\n// import { useEffect, useState } from 'react';\n\n// export default function DataDisplay() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n\n//         fetchData()\n\n//     }, [])\n\n\n//     const fetchData = async () => {\n        \n//         try {\n\n//             const response = await axios.get('http://localhost:9000/aliens/sec');\n\n            \n//             console.log(response)\n\n//             setData(response.data)\n\n\n//         } catch (error) {\n\n//             console.log('Error fetching data:', error)\n\n//         }\n\n//     };\n\n//     return (\n\n//         <div>\n\n//             <h2>Product Data:\n\n//             </h2>\n\n\n//             {data.map((item) => (\n\n//                 <div key={item._id}>\n\n//                     <pre>Query: {item.query.query_string.query}</pre>\n\n//                     <p>ID: {item._id}</p>\n\n\n//                 </div>\n\n//             ))}\n//         </div>\n//     );\n// };\n\n\n//  import React, { useState } from 'react';\n\n//  import axios from 'axios';\n\n//  export default function FormatData() {\n\n//   const [orderNumber, setOrderNumber] = useState('');\n\n//   const [data, setData] = useState(null);\n\n//   const [loading, setLoading] = useState(false);\n\n//   const handleFetchData = () => {\n\n//     setLoading(true);\n\n//     axios\n//       .get(`http://localhost:9000/aliens/${orderNumber}`)\n\n//       .then(response => {\n\n//         if (response.status === 200) {\n\n//           setData(response.data);\n\n//         } else {\n\n//           alert('An error occurred');\n//         }\n//       })\n\n//       .catch(error => {\n\n//         console.log('Error', error);\n\n//       })\n\n//       .finally(() => {\n\n//         setLoading(false);\n        \n//       });\n//   };\n\n//   return (\n//     <div className='container'>\n\n//       <label className='label' htmlFor='orderNumber'>\n\n//         Order Number:\n\n//       </label>\n\n//       <input\n\n//         type='text'\n\n//         value={orderNumber}\n\n//         onChange={e => setOrderNumber(e.target.value)}\n\n//         placeholder='Enter order number'\n\n//       />\n\n//       <br />\n\n//       <button className='btn' onClick={handleFetchData}>\n        \n//         Order-Number\n\n//       </button>\n\n//       {loading && <p>Loading...</p>}\n\n//       {data && (\n\n//         <pre className='json-format'>{JSON.stringify(data, null, 2)}</pre>\n\n//       )}\n//     </div>\n//   );\n// }\n\n\n\nexport default function FormatData() {\n\n    const [orderNumber, setOrderNumber] = useState('');\n\n    const [data, setData] = useState([]);\n\n    const [loading, setLoading] = useState(false);\n  \n    const handleFetchData = () => {\n\n      setLoading(true);\n  \n      axios\n        .get('http://localhost:9000/aliens')\n\n        .then(response => {\n\n          if (response.status === 200) {\n\n            setData(response.data);\n\n          } else {\n\n            alert('An error occurred');\n\n          }\n        })\n        .catch(error => {\n\n          console.log('Error', error);\n\n        })\n\n        .finally(() => {\n\n          setLoading(false);\n\n        });\n\n    };\n  \n    const filteredData = data.filter(item => {\n        \n      return item.query.query_string.order_number === orderNumber;\n    });\n  \n    return (\n      <div className='container'>\n        <label className='label' htmlFor='ON'>\n          ON:\n        </label>\n        <input\n          type='text'\n          value={orderNumber}\n          onChange={e => setOrderNumber(e.target.value)}\n          placeholder='Enter order number'\n          className='input'\n        />\n        <button className='btn' onClick={handleFetchData}>\n          Fetch Data\n        </button>\n        {loading && <p>Loading...</p>}\n        {filteredData.length > 0 ? (\n          filteredData.map((item, index) => (\n            <pre key={index} className='json-format'>\n              {JSON.stringify(item, null, 2)}\n            </pre>\n          ))\n        ) : (\n          <p>No data found</p>\n        )}\n      </div>\n    );\n  }\n  \n"],"mappings":";;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA,eAAe,SAASA,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAE5BD,UAAU,CAAC,IAAI,CAAC;IAEhBE,KAAK,CACFC,GAAG,CAAC,8BAA8B,CAAC,CAEnCC,IAAI,CAACC,QAAQ,IAAI;MAEhB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAE3BR,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC;MAExB,CAAC,MAAM;QAELU,KAAK,CAAC,mBAAmB,CAAC;MAE5B;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MAEdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAE7B,CAAC,CAAC,CAEDG,OAAO,CAAC,MAAM;MAEbZ,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC;EAEN,CAAC;EAED,MAAMa,YAAY,GAAGhB,IAAI,CAACiB,MAAM,CAACC,IAAI,IAAI;IAEvC,OAAOA,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,YAAY,KAAKxB,WAAW;EAC7D,CAAC,CAAC;EAEF,oBACEyB,OAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBF,OAAA;MAAOC,SAAS,EAAC,OAAO;MAACE,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAEtC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACRP,OAAA;MACEQ,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElC,WAAY;MACnBmC,QAAQ,EAAEC,CAAC,IAAInC,cAAc,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC,oBAAoB;MAChCZ,SAAS,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACFP,OAAA;MAAQC,SAAS,EAAC,KAAK;MAACa,OAAO,EAAEhC,eAAgB;MAAAoB,QAAA,EAAC;IAElD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACR3B,OAAO,iBAAIoB,OAAA;MAAAE,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EAC5Bb,YAAY,CAACqB,MAAM,GAAG,CAAC,GACtBrB,YAAY,CAACsB,GAAG,CAAC,CAACpB,IAAI,EAAEqB,KAAK,kBAC3BjB,OAAA;MAAiBC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACrCgB,IAAI,CAACC,SAAS,CAACvB,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC,GADtBqB,KAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGhB,CAAC,gBAEFP,OAAA;MAAAE,QAAA,EAAG;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACjC,EAAA,CAzEqBD,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}